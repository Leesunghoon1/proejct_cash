package com.easyfestival.www.config;

import javax.sql.DataSource;

import org.apache.ibatis.session.SqlSessionFactory;
import org.mybatis.spring.SqlSessionFactoryBean;
import org.mybatis.spring.annotation.MapperScan;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.EnableAspectJAutoProxy;
import org.springframework.jdbc.datasource.DataSourceTransactionManager;
import org.springframework.scheduling.annotation.EnableScheduling;
import org.springframework.transaction.annotation.EnableTransactionManagement;

import com.zaxxer.hikari.HikariConfig;
import com.zaxxer.hikari.HikariDataSource;

//@EnableWebMvc : Controller 어노테이션이 셋팅되어 있는 클래스를 Controller로 등록한다. // <annotation-driven/>
@EnableWebMvc
//스캔할 패키지를 지정한다.  // <context:component-scan base-package="com.my.spring.controller"/>
@ComponentScan(basePackages = {"com.moon.www.controller", "com.moon.www.handler"})
public class ServletConfig implements WebMvcConfigurer{

	@Override
	public void addResourceHandlers(ResourceHandlerRegistry registry) {
		// 정적 파일의 경로를 맵핑
		registry.addResourceHandler("/resources/**").addResourceLocations("/resources/");
		
		// 파일 업로드 경로 추가 (file:/// 붙여줌)
		registry.addResourceHandler("/upload/**").addResourceLocations("file:///C:\\Users\\UserK\\_myweb\\_java\\fileupload\\");
	}

	@Override
	public void configureViewResolvers(ViewResolverRegistry registry) {
		// Controller의 메서드가 반환하는 jsp의 이름 앞뒤에 경로와 확장자를 붙혀주도록 설정한다.
		InternalResourceViewResolver viewResolver = new InternalResourceViewResolver();
		viewResolver.setViewClass(JstlView.class);
		viewResolver.setPrefix("/WEB-INF/views/");
		viewResolver.setSuffix(".jsp");
		registry.viewResolver(viewResolver);
	}
	
	// 파일 업로드시 bean으로 multipartResolver 설정 
	@Bean(name = "multipartResolver")
	public MultipartResolver getMultipartResolver() {
		StandardServletMultipartResolver multipartResolver = new StandardServletMultipartResolver();
		return multipartResolver;
	}
}
